version: '3'

services:
  web:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./media:/vol/web/media
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:alpine

  celery:
    build:
      context: .
    command: "celery -A config worker -l INFO"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db && celery -A config beat -l INFO"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  flower:
    build:
      context: .
    ports:
      - "5555:5555"
    command: "celery -A config flower --address=0.0.0.0"
    depends_on:
      - celery
    env_file:
      - .env
